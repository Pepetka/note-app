name: linting, testing, building
run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
jobs:
  pipeline:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v2
      - name: Starting Node.js ${{matrix.node-version}}
        uses: actions/setup-node@v1
        with:
          node-version: ${{matrix.node-version}}

      - name: install modules
        run: npm ci

      - name: create env file
        run: |
          touch .env
          echo REACT_APP_DB_URL=${{ secrets.REACT_APP_DB_URL }} >> .env
          echo REACT_APP_FIREBASE_API_KEY=${{ secrets.REACT_APP_FIREBASE_API_KEY }} >> .env
          echo REACT_APP_FIREBASE_AUTH_DOMAIN=${{ secrets.REACT_APP_FIREBASE_AUTH_DOMAIN }} >> .env
          echo REACT_APP_FIREBASE_PROJECT_ID=${{ secrets.REACT_APP_FIREBASE_PROJECT_ID }} >> .env
          echo REACT_APP_FIREBASE_STORAGE_BUCKET=${{ secrets.REACT_APP_FIREBASE_STORAGE_BUCKET }} >> .env
          echo REACT_APP_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.REACT_APP_FIREBASE_MESSAGING_SENDER_ID }} >> .env

      - name: build production project
        run: CI=false && npm run build
        if: always()

      - name: linting typescript
        run: npm run lint:ts
        if: always()

      - name: linting scss
        run: npm run lint:scss
        if: always()

      - name: testing units
        run: npm run test:unit
        if: always()

      - name: build storybook
        run: npm run storybook:build
        if: always()

      - name: testing ui screenshots
        run: npm run test:ui
